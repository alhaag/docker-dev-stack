version: '3'

#networks:
#  services-net:
#    driver: global

services:

  #
  # MONGO DB
  # #############################################
  mongo:
    image: mongo:latest
    container_name: mongo
    #networks:
    #  - services-net
    hostname: mongo
    ports:
      - "27017:27017"
    environment:
      TZ: "${TZ}"
    volumes:
      - "${MONGO_DATA}:/data/db"
    restart: always

  #
  # MySQL
  # #############################################
  mysql:
    image: mysql:5.6.35
    container_name: mysql
    #networks:
    #  - services-net
    hostname: mysql
    stdin_open: true
    # tty: true
    ports:
      - "3306:3306"
    environment:
      TZ: "${TZ}"
      #MYSQL_USER: user
      #MYSQL_PASSWORD: passwd
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_CLIENT: '%.%.%.%'
    volumes:
      - ./conf/mysql:/etc/mysql/conf.d
      - "${MYSQL_DATA}:/var/lib/mysql"
    # service deployment
    #deploy:
    #  mode: replicated
    #  replicas: 1
    #  labels: [APP=VOTING]
    #  # service resource management
    #  resources:
    #    # Hard limit - Docker does not allow to allocate more
    #    limits:
    #      cpus: '0.25'
    #      memory: 512M
    #    # Soft limit - Docker makes best effort to return to it
    #    reservations:
    #      cpus: '0.25'
    #      memory: 256M
    #  # service restart policy
    #  restart_policy:
    #    condition: on-failure
    #    delay: 5s
    #    max_attempts: 3
    #    window: 120s
    #  # service update configuration
    #  update_config:
    #    parallelism: 1
    #    delay: 10s
    #    failure_action: continue
    #    monitor: 60s
    #    max_failure_ratio: 0.3
    restart: always
  #
  # PHP FPM 5.6
  # #############################################
  php-fpm:
    image: dsc-php-fpm-56
    container_name: php-fmp-56
    #networks:
    #  - services-net
    links:
      - "mysql"
    hostname: php-fpm
    ports:
      - "9000:9000"
    environment:
      TZ: "${TZ}"
    volumes:
      - ./conf/php/php.ini:/usr/local/etc/php/php.ini
      - "${WWW_DATA}:/var/www/html"
    depends_on:
      - mysql
    restart: always

  #
  # API AUTH
  # #############################################
  api-auth:
    image: dsc-node
    container_name: api-auth
    #networks:
    #  - services-net
    links:
      - mongo
    hostname: api-auth
    environment:
      TZ: "${TZ}"
    volumes:
      - "${WWW_DATA}:/var/www/html"
    command: >
       sh -c "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &&
       echo $TZ > /etc/timezone &&
       cd /var/www/html/dsc-api-auth && npm start"
    depends_on:
      - mongo
    restart: always

  #
  # API MAIL
  # #############################################
  api-mail:
    image: dsc-node
    container_name: api-mail
    #networks:
    #  - services-net
    links:
      - mongo
    hostname: api-mail
    environment:
      TZ: "${TZ}"
    volumes:
      - "${WWW_DATA}:/var/www/html"
    command: >
       sh -c "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &&
       echo $TZ > /etc/timezone &&
       cd /var/www/html/dsc-api-mail && npm start"
    depends_on:
      - mongo
    restart: always

  #
  # API ADDRESS
  # #############################################
  api-address:
    image: dsc-node
    container_name: api-address
    #networks:
    #  - services-net
    links:
      - mongo
    hostname: api-address
    environment:
      TZ: "${TZ}"
    volumes:
      - "${WWW_DATA}:/var/www/html"
    command: >
       sh -c "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &&
       echo $TZ > /etc/timezone &&
       cd /var/www/html/dsc-api-address && npm start"
    depends_on:
      - mongo
    restart: always

  #
  # API SUELENTAVARES
  # #############################################
  api-suelentavares:
    image: dsc-node
    container_name: api-suelentavares
    #networks:
    #  - services-net
    links:
      - mongo
    hostname: api-suelentavares
    environment:
      TZ: "${TZ}"
    volumes:
      - "${WWW_DATA}:/var/www/html"
    command: >
       sh -c "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &&
       echo $TZ > /etc/timezone &&
       cd /var/www/html/dsc-api-suelentavares && npm start"
    depends_on:
      - mongo
    restart: always

  #
  # OPENRESTY (Web proxy api autorization)
  # #############################################
  openresty:
    image: dsc-openresty:latest
    container_name: openresty
    #networks:
    #  - services-net
    links:
      - api-auth
      - api-mail
      - api-address
      - api-suelentavares
    hostname: web-proxy
    environment:
      JWT_SECRET: "${JWT_SECRET}"
    #ports:
    #  - "8080:8080"
    volumes:
      - "${OPENRESTY_HOSTS_CONF}:/etc/nginx/conf.d"
      - "${OPENRESTY_NGINX_CONF}:/nginx.conf"
      - ./conf/openresty/lua/bearer.lua:/bearer.lua
    depends_on:
      - api-auth
      - api-mail
      - api-address
      - api-suelentavares
    restart: always

  #
  # NGINX (External web border 80 and 443 ports)
  # #############################################
  nginx:
    image: nginx:latest
    container_name: nginx
    #networks:
    #  - services-net
    links:
      - php-fpm
      - api-auth
      - api-mail
      - api-address
      - api-suelentavares
      - openresty
    ports:
      - "80:80"
    environment:
      TZ: "${TZ}"
    volumes:
      - "${WWW_DATA}:/var/www/html"
      - "${NGINX_HOSTS_CONF}:/etc/nginx/conf.d"
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php-fpm
      - api-auth
      - api-mail
      - api-address
      - api-suelentavares
      - openresty
    restart: always